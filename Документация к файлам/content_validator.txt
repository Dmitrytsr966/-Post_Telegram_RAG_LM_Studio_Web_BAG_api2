# ContentValidator - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

## –û–ø–∏—Å–∞–Ω–∏–µ

`ContentValidator` ‚Äî –∫–ª–∞—Å—Å –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏, –æ—á–∏—Å—Ç–∫–∏ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤ Telegram –∫–∞–Ω–∞–ª—ã. –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º Telegram API, –æ—á–∏—â–∞–µ—Ç –æ—Ç –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç Markdown –≤ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π Telegram HTML.

## –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

- ‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è Markdown ‚Üí Telegram HTML
- ‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö HTML —Ç–µ–≥–æ–≤
- ‚úÖ –û—á–∏—Å—Ç–∫–∞ –æ—Ç —Ç–∞–±–ª–∏—Ü –∏ –±–ª–æ–∫–æ–≤ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π
- ‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è emoji-—Å–ø–∞–º–∞
- ‚úÖ –°–æ–±–ª—é–¥–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤ Telegram (4096/1024 —Å–∏–º–≤–æ–ª–æ–≤)
- ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
- ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤

## –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∫–ª–∞—Å—Å–∞

```python
TELEGRAM_TEXT_LIMIT = 4096      # –ú–∞–∫—Å–∏–º—É–º —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
TELEGRAM_SAFE_LIMIT = 4000      # –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –ª–∏–º–∏—Ç —Å –∑–∞–ø–∞—Å–æ–º
MIN_CONTENT_LENGTH = 15         # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
MAX_EMOJI_FRACTION = 0.5        # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–æ–ª—è emoji –≤ —Ç–µ–∫—Å—Ç–µ
MAX_EMOJI_RUN = 5               # –ú–∞–∫—Å–∏–º—É–º –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö emoji –ø–æ–¥—Ä—è–¥
```

## –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ HTML —Ç–µ–≥–∏ Telegram

```python
ALLOWED_TAGS = {
    "b", "strong",    # –ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç
    "i", "em",        # –ö—É—Ä—Å–∏–≤
    "u", "ins",       # –ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π
    "s", "strike", "del",  # –ó–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π
    "code",           # –ò–Ω–ª–∞–π–Ω –∫–æ–¥
    "pre",            # –ë–ª–æ–∫ –∫–æ–¥–∞
    "a"               # –°—Å—ã–ª–∫–∏
}
```

## –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã

### `__init__(config: Optional[Dict] = None)`

–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞ —Å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π.

```python
validator = ContentValidator()
# –∏–ª–∏ —Å –∫–æ–Ω—Ñ–∏–≥–æ–º
validator = ContentValidator(config={"custom_setting": "value"})
```

### `validate_content(text: str) -> str`

**–ì–ª–∞–≤–Ω—ã–π –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞** ‚Äî –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–ª–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é –∏ –æ—á–∏—Å—Ç–∫—É —Ç–µ–∫—Å—Ç–∞.

**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:**
- `text` (str): –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏

**–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:**
- `str`: –û—á–∏—â–µ–Ω–Ω—ã–π –∏ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, –≥–æ—Ç–æ–≤—ã–π –¥–ª—è Telegram

**–≠—Ç–∞–ø—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏:**
1. –£–¥–∞–ª–µ–Ω–∏–µ –±–ª–æ–∫–æ–≤ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π `<think>...</think>`
2. –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è Markdown ‚Üí Telegram HTML
3. –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö HTML —Ç–µ–≥–æ–≤
4. –£–¥–∞–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
5. –û—á–∏—Å—Ç–∫–∞ –æ—Ç –º—É—Å–æ—Ä–∞ –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
6. –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è emoji-—Å–ø–∞–º–∞
7. –°–æ–±–ª—é–¥–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤ Telegram
8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞

```python
validator = ContentValidator()
clean_text = validator.validate_content(raw_text)
```

### `remove_thinking_blocks(text: str) -> str`

–£–¥–∞–ª—è–µ—Ç –±–ª–æ–∫–∏ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π AI –º–æ–¥–µ–ª–∏, –æ–±—ã—á–Ω–æ –∑–∞–∫–ª—é—á–µ–Ω–Ω—ã–µ –≤ —Ç–µ–≥–∏ `<think>...</think>`.

```python
text_with_thoughts = "Hello <think>let me think...</think> world!"
clean_text = validator.remove_thinking_blocks(text_with_thoughts)
# –†–µ–∑—É–ª—å—Ç–∞—Ç: "Hello  world!"
```

### `convert_markdown_to_telegram_html(text: str) -> str`

–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç Markdown —Ä–∞–∑–º–µ—Ç–∫—É –≤ HTML —Ç–µ–≥–∏, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ Telegram.

**–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏:**

| Markdown | Telegram HTML | –û–ø–∏—Å–∞–Ω–∏–µ |
|----------|---------------|----------|
| `**text**` –∏–ª–∏ `__text__` | `<b>text</b>` | –ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç |
| `*text*` –∏–ª–∏ `_text_` | `<i>text</i>` | –ö—É—Ä—Å–∏–≤ |
| `~~text~~` | `<s>text</s>` | –ó–∞—á–µ—Ä–∫–Ω—É—Ç—ã–π |
| `` `code` `` | `<code>code</code>` | –ò–Ω–ª–∞–π–Ω –∫–æ–¥ |
| ```` ```code``` ```` | `<pre>code</pre>` | –ë–ª–æ–∫ –∫–æ–¥–∞ |
| `[text](url)` | `<a href="url">text</a>` | –°—Å—ã–ª–∫–∏ |

```python
markdown = "**–ñ–∏—Ä–Ω—ã–π** –∏ *–∫—É—Ä—Å–∏–≤* —Ç–µ–∫—Å—Ç —Å `–∫–æ–¥–æ–º`"
html = validator.convert_markdown_to_telegram_html(markdown)
# –†–µ–∑—É–ª—å—Ç–∞—Ç: "<b>–ñ–∏—Ä–Ω—ã–π</b> –∏ <i>–∫—É—Ä—Å–∏–≤</i> —Ç–µ–∫—Å—Ç —Å <code>–∫–æ–¥–æ–º</code>"
```

### `escape_html(text: str) -> str`

–≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç HTML —Å–∏–º–≤–æ–ª—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Ç–µ–≥–∞—Ö.

```python
unsafe = "Code: <script>alert('xss')</script>"
safe = validator.escape_html(unsafe)
# –†–µ–∑—É–ª—å—Ç–∞—Ç: "Code: &lt;script&gt;alert('xss')&lt;/script&gt;"
```

## –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ—á–∏—Å—Ç–∫–∏

### `_remove_forbidden_html_tags(text: str) -> str`

–£–¥–∞–ª—è–µ—Ç –≤—Å–µ HTML —Ç–µ–≥–∏, –∫—Ä–æ–º–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö Telegram API.

### `_remove_tables_and_thinking(text: str) -> str`

–£–¥–∞–ª—è–µ—Ç:
- Markdown —Ç–∞–±–ª–∏—Ü—ã (`| col1 | col2 |`)
- HTML —Ç–∞–±–ª–∏—Ü—ã (`<table>...</table>`)
- –û—Å—Ç–∞–≤—à–∏–µ—Å—è –±–ª–æ–∫–∏ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π

### `_clean_junk(text: str) -> str`

–û—á–∏—â–∞–µ—Ç –æ—Ç —Ä–∞–∑–ª–∏—á–Ω–æ–≥–æ "–º—É—Å–æ—Ä–∞":
- Null –∑–Ω–∞—á–µ–Ω–∏—è (`nan`, `None`, `null`)
- Unicode —Å–∏–º–≤–æ–ª—ã-–Ω–µ–≤–∏–¥–∏–º–∫–∏
- HTML —Å—É—â–Ω–æ—Å—Ç–∏
- –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã
- –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã
- JavaScript —Å—Å—ã–ª–∫–∏
- –ò–∑–±—ã—Ç–æ—á–Ω—ã–µ –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è

### `_filter_emoji_spam(text: str) -> str`

–§–∏–ª—å—Ç—Ä—É–µ—Ç emoji-—Å–ø–∞–º:
- –ï—Å–ª–∏ >50% —Ç–µ–∫—Å—Ç–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ emoji ‚Äî –æ—Ç–∫–ª–æ–Ω—è–µ—Ç
- –ï—Å–ª–∏ >5 –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö emoji –ø–æ–¥—Ä—è–¥ ‚Äî –æ—Ç–∫–ª–æ–Ω—è–µ—Ç

```python
spam_text = "üöÄüöÄüöÄüöÄüöÄüöÄ Text"  # –ú–Ω–æ–≥–æ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö emoji
result = validator._filter_emoji_spam(spam_text)
# –†–µ–∑—É–ª—å—Ç–∞—Ç: "" (–ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ - –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ)
```

### `_ensure_telegram_limits(text: str) -> str`

–û–±—Ä–µ–∑–∞–µ—Ç —Ç–µ–∫—Å—Ç –¥–æ –ª–∏–º–∏—Ç–æ–≤ Telegram:
- –ü—ã—Ç–∞–µ—Ç—Å—è –Ω–∞–π—Ç–∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—É—é —Ç–æ—á–∫—É –æ–±—Ä—ã–≤–∞ (–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ)
- –î–æ–±–∞–≤–ª—è–µ—Ç –º–Ω–æ–≥–æ—Ç–æ—á–∏–µ `‚Ä¶` –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –æ–±—Ä–µ–∑–∞–Ω
- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç `TELEGRAM_SAFE_LIMIT` (4000 —Å–∏–º–≤–æ–ª–æ–≤)

### `_content_quality_check(text: str) -> bool`

–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:
- –ú–∏–Ω–∏–º—É–º 15 —Å–∏–º–≤–æ–ª–æ–≤
- –ú–∏–Ω–∏–º—É–º 3 —Å–ª–æ–≤–∞
- –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Å–∏–º–≤–æ–ª–æ–≤ (>10 –ø–æ–¥—Ä—è–¥)

## –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è

–ö–ª–∞—Å—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–µ–¥–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ regex –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:

```python
# –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
self.re_tag = re.compile(r'</?([a-zA-Z0-9]+)[^>]*>')        # HTML —Ç–µ–≥–∏
self.re_think = re.compile(r'<\s*think[^>]*>.*?<\s*/\s*think\s*>', re.IGNORECASE | re.DOTALL)

# Markdown –ø–∞—Ç—Ç–µ—Ä–Ω—ã
self.re_md_bold1 = re.compile(r'(?<!\*)\*\*([^\*]+)\*\*(?!\*)')     # **bold**
self.re_md_italic1 = re.compile(r'(?<!\*)\*([^\*]+)\*(?!\*)')       # *italic*
self.re_md_code_block = re.compile(r'```(.*?)```', re.DOTALL)       # ```code```

# –û—á–∏—Å—Ç–∫–∞
self.re_invalid = re.compile(r'[^\x09\x0A\x0D\x20-\x7E–∞-—è–ê-–Ø—ë–Åa-zA-Z0-9.,:;!?()\[\]{}<>@#%^&*_+=/\\|\'\"`~$‚Ññ-]')
self.re_repeated_chars = re.compile(r'(.)\1{10,}')
```

## –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

### –ë–∞–∑–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

```python
from content_validator import ContentValidator

validator = ContentValidator()

# –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç —Å Markdown
raw_content = """
# –ó–∞–≥–æ–ª–æ–≤–æ–∫

**–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è** –æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö:

- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `Python 3.13`
- –ò–∑–±–µ–≥–∞–π—Ç–µ ~~—Å—Ç–∞—Ä—ã—Ö~~ –ø–æ–¥—Ö–æ–¥–æ–≤
- –ß–∏—Ç–∞–π—Ç–µ [–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é](https://docs.python.org)

<think>–ù–∞–¥–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π...</think>

```python
def example():
    return "Hello World"
```
"""

# –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ –æ—á–∏—Å—Ç–∫–∞
clean_content = validator.validate_content(raw_content)
print(clean_content)
```

**–†–µ–∑—É–ª—å—Ç–∞—Ç:**
```html
<b>–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b> –æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö:

- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>Python 3.13</code>
- –ò–∑–±–µ–≥–∞–π—Ç–µ <s>—Å—Ç–∞—Ä—ã—Ö</s> –ø–æ–¥—Ö–æ–¥–æ–≤  
- –ß–∏—Ç–∞–π—Ç–µ <a href="https://docs.python.org">–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é</a>

<pre>def example():
    return "Hello World"</pre>
```

### –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏

```python
# –î–ª—è –º–µ–¥–∏–∞-–ø–æ—Å—Ç–æ–≤ (–ª–∏–º–∏—Ç 1024 —Å–∏–º–≤–æ–ª–∞)
long_text = "–û—á–µ–Ω—å –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç..." * 200

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–∏–º–∏—Ç–∞ –¥–ª—è –º–µ–¥–∏–∞
validator.TELEGRAM_TEXT_LIMIT = 1024
validator.TELEGRAM_SAFE_LIMIT = 1000

short_text = validator.validate_content(long_text)
print(f"–î–ª–∏–Ω–∞: {len(short_text)}")  # ‚â§ 1024
```

### –ö–∞—Å—Ç–æ–º–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è

```python
config = {
    "max_emoji_fraction": 0.3,  # –ë–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∏–π –ª–∏–º–∏—Ç emoji
    "min_words": 5              # –ú–∏–Ω–∏–º—É–º —Å–ª–æ–≤
}

validator = ContentValidator(config)
result = validator.validate_content(emoji_heavy_text)
```

## –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ

–ö–ª–∞—Å—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º:

```python
import logging
logging.basicConfig(level=logging.INFO)

validator = ContentValidator()
# –õ–æ–≥–∏ –±—É–¥—É—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö –∫–æ–Ω—Ç–µ–Ω—Ç–∞
```

–¢–∏–ø—ã –ª–æ–≥–æ–≤:
- `ERROR`: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–∏–ø –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
- `WARNING`: –ü—É—Å—Ç–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç, emoji-—Å–ø–∞–º, –Ω–µ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç

## –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram Bot

```python
import asyncio
from telegram import Bot

async def send_validated_message(bot_token: str, chat_id: str, raw_text: str):
    validator = ContentValidator()
    clean_text = validator.validate_content(raw_text)
    
    if not clean_text:
        print("–ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é")
        return False
        
    bot = Bot(token=bot_token)
    await bot.send_message(
        chat_id=chat_id,
        text=clean_text,
        parse_mode='HTML'  # –í–∞–∂–Ω–æ: –∏—Å–ø–æ–ª—å–∑—É–µ–º HTML —Ä–µ–∂–∏–º
    )
    return True
```

## –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å

- –ü—Ä–µ–¥–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ regex –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
- –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Ö–æ–¥–æ–≤ –ø–æ —Ç–µ–∫—Å—Ç—É
- –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å emoji —á–µ—Ä–µ–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫—É `emoji`
- Graceful –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –±–µ–∑ –ø–∞–¥–µ–Ω–∏—è

## –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

```txt
emoji>=2.0.0  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å emoji
```

## –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏

1. **Telegram HTML**: –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –Ω–∞–±–æ—Ä —Ç–µ–≥–æ–≤
2. **Emoji Detection**: –ú–æ–∂–µ—Ç –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –≤—Å–µ unicode emoji
3. **Table Removal**: –£–¥–∞–ª—è–µ—Ç –í–°–ï —Ç–∞–±–ª–∏—Ü—ã (Markdown –∏ HTML)
4. **Link Safety**: –ë–ª–æ–∫–∏—Ä—É–µ—Ç JavaScript –∏ data: —Å—Å—ã–ª–∫–∏
5. **Encoding**: –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å UTF-8

## –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏

–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –ø—Ä–∞–≤–∏–ª –≤–∞–ª–∏–¥–∞—Ü–∏–∏:

```python
class CustomContentValidator(ContentValidator):
    def validate_content(self, text: str) -> str:
        # –í—ã–∑–æ–≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        text = super().validate_content(text)
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª
        text = self._custom_cleaning(text)
        return text
    
    def _custom_cleaning(self, text: str) -> str:
        # –í–∞—à–∞ –ª–æ–≥–∏–∫–∞ –æ—á–∏—Å—Ç–∫–∏
        return text
```

## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

```python
def test_content_validator():
    validator = ContentValidator()
    
    # –¢–µ—Å—Ç Markdown –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
    assert validator.convert_markdown_to_telegram_html("**bold**") == "<b>bold</b>"
    
    # –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π
    assert validator.remove_thinking_blocks("Hello <think>test</think>") == "Hello "
    
    # –¢–µ—Å—Ç –ª–∏–º–∏—Ç–æ–≤
    long_text = "a" * 5000
    result = validator.validate_content(long_text)
    assert len(result) <= 4096
```

---

*–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–∞ –¥–ª—è ContentValidator v1.0*